# membuat tabel produk

CREATE TABLE produk(
    id int not null AUTO_INCREMENT PRIMARY KEY,
    kode varchar(10),
    nama varchar(45),
    harga_beli double,
    harga_jual double,
    stok int,
    min_stok int,
    jenis_produk_id int not null REFERENCES jenis_produk(id)
);


# membuat tabel pesanan items

CREATE TABLE pesanan_items(
    id int not null AUTO_INCREMENT PRIMARY KEY,
    produk_id int not null REFERENCES produk(id),
    pesanan_id int not null REFERENCES pesanan(id),
    qty int,
    harga double
);


# membuat tabel vendor

CREATE TABLE vendor(
    id int not null AUTO_INCREMENT PRIMARY KEY,
    nomor varchar(4),
    nama varchar(40),
    kota varchar (30),
    kontak varchar(30)
);


# membuat tabel pembelian

CREATE TABLE pembelian(
    id int not null AUTO_INCREMENT PRIMARY KEY,
    tanggal varchar(45),
    nomor varchar(10),
    produk_id int not null REFERENCES produk(id),
    jumlah int,
    harga double,
    vendor_id int not null REFERENCES vendor(id)
);



# worksheet 2

# SOAL 2.2

# menampilkan data produk yang stoknya 3 dan 10
SELECT * from produk WHERE stok=3 OR stok=10;

# menampilkan data produk yang harga jualnya kurang dari 5 juta tetapi lebih dari 500 ribu
SELECT * FROM produk WHERE harga_jual < 5000000 AND harga_jual > 500000;

# menampilkan data produk yang harus segera ditambah stoknya
SELECT * FROM produk WHERE min_stok > stok;

# menampilkan data pelanggan mulai dari yang paling muda
SELECT * FROM pelanggan ORDER BY tgl_lahir DESC;

# menampilkan data pelanggan yang lahirnya di Jakarta dan gendernya perempuan
SELECT * FROM pelanggan WHERE tmp_lahir='jakarta' AND jk='P';

# menampilkan data pelanggan yang ID nya 2, 4 dan 6
SELECT * from pelanggan WHERE id IN (2,4,6);

# menampilkan data produk yang harganya antara 500 ribu sampai 6 juta
SELECT * FROM produk WHERE harga_jual >= 500000 AND harga_jual<= 6000000;

# SOAL 2.3

# menampilkan produk yang kode awalnya huruf K dan huruf M
SELECT * FROM produk WHERE kode LIKE 'K%' OR kode LIKE 'M%';

# menampilkan produk yang kode awalnya bukan huruf M
SELECT * FROM produk WHERE NOT (kode LIKE 'M%');

# menampilkan produk-produk televisi
SELECT * FROM produk WHERE jenis = 'televisi';

# menampilkan pelanggan mengandung huruf 'SA'
SELECT * FROM pelanggan WHERE nama LIKE '%SA%';

# menampilkan pelanggan yang lahirnya bukan di Jakarta dan mengandung huruf ‘yo‘
SELECT * FROM pelanggan WHERE NOT (kota_lahir = 'Jakarta' AND nama LIKE '%yo%');

# menampilkan pelanggan yang karakter huruf ke – 2 nya adalah A
SELECT * FROM pelanggan WHERE SUBSTRING(nama, 2, 1) = 'A';


# SOAL 2.4

# menampilkan 2 data produk termahal
SELECT *FROM produk ORDER BY harga_beli DESC LIMIT 2;

# menampilkan produk yang paling murah
SELECT * FROM produk ORDER BY harga_beli ASC LIMIT 1;

# menampilkan produk yang stoknya paling banyak
SELECT * FROM produk ORDER BY stok DESC LIMIT 1;

# menampilkan dua produk yang stoknya paling sedikit
SELECT * FROM produk ORDER BY stok ASC LIMIT 2;

# menampilkan pelanggan yang paling muda
SELECT * FROM pelanggan ORDER BY tanggal_lahir ASC LIMIT 1;

# menampilkan pelanggan yang paling tua
SELECT * FROM pelanggan ORDER BY tanggal_lahir DESC LIMIT 1;









