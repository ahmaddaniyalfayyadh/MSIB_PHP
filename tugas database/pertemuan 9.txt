SOAL 6.1

NOMOR 1
DELIMITER $$
CREATE PROCEDURE pro_naikan_harga (
    IN jenis_produk_id INT,
    IN persentase_kenaikan INT
)
BEGIN
    UPDATE produk 
    SET harga_jual = harga_jual + (harga_jual * persentase_kenaikan / 100)
    WHERE jenis_produk_id = jenis_produk_id;
END $$
DELIMITER ;

NOMOR 2
DELIMITER $$
CREATE FUNCTION umur(tgl_lahir DATE)
RETURNS INT
BEGIN
    DECLARE umur INT;
    SET umur = TIMESTAMPDIFF(YEAR, tgl_lahir, CURDATE());
    RETURN umur;
END $$
DELIMITER ;

NOMOR 3
DELIMITER $$
CREATE FUNCTION kategori_harga(harga DOUBLE)
RETURNS VARCHAR(255)
BEGIN
    DECLARE kategori VARCHAR(255);
    IF harga <= 500000 THEN
        SET kategori = 'murah';
    ELSEIF harga <= 3000000 THEN
        SET kategori = 'sedang';
    ELSEIF harga <= 10000000 THEN
        SET kategori = 'mahal';
    ELSE
        SET kategori = 'sangat mahal';
    END IF;
    RETURN kategori;
END $$
DELIMITER ;


SOAL 6.2

NOMOR 1
#. Pelanggan memesan didalam table pesanan
SELECT * FROM pesanan;
Didalam table pembayaran tambahkan kolom status_pembayaran
ALTER TABLE pembayaran ADD status_pembayaran varchar(25);
#. Dilanjutkan dengan proses pembayaran di table pembayaran
DELIMITER $$
CREATE TRIGGER cek_pembayaran BEFORE INSERT ON pembayaran
FOR EACH ROW
BEGIN
DECLARE total_bayar DECIMAL(10, 2);
DECLARE total_pesanan DECIMAL(10, 2);
SELECT SUM(jumlah) INTO total_bayar FROM pembayaran WHERE pesanan_id = NEW.pesanan_id;
SELECT total INTO total_pesanan FROM pesanan WHERE id = NEW.pesanan_id;
#. Jika pesanan sudah dibayar maka status pembayaran akan berubah menjadi lunas
IF total_bayar + NEW.jumlah >= total_pesanan THEN
SET NEW.status_pembayaran = 'Lunas';
END IF;
END $$
DELIMITER ;
// Menambahkan data pada tabel pembayaran
INSERT INTO pembayaran (no_kuitansi, tanggal, jumlah, ke, pesanan_id, status_pembayaran)
VALUES ('KWI001', '2023-03-03', 200000, 1, 1);

NOMOR 2
DELIMITER $$
CREATE PROCEDURE kurangi_stok(
    IN produk_id INT,
    IN jumlah_pesanan INT
)
BEGIN
    DECLARE stok_produk INT;
    SELECT stok INTO stok_produk FROM produk WHERE produk_id = produk_id;
    IF stok_produk >= jumlah_pesanan THEN
        UPDATE produk SET stok = stok_produk - jumlah_pesanan WHERE produk_id = produk_id;
        SELECT 'Stok berhasil dikurangi.' AS status;
    ELSE
        SELECT 'Stok produk tidak mencukupi' AS status;
    END IF;
END $$
DELIMITER ;

NOMOR 3
DELIMITER $$
CREATE TRIGGER trig_kurangi_stok
AFTER INSERT ON pesanan_items
FOR EACH ROW
BEGIN
    DECLARE produk_stok INT;
    SELECT stok INTO produk_stok FROM produk WHERE produk_id = NEW.produk_id;
    IF produk_stok >= NEW.jumlah_pesanan THEN
        CALL kurangi_stok(NEW.produk_id, NEW.jumlah_pesanan);
    ELSE
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Stok produk tidak mencukupi untuk pesanan ini.';
    END IF;
END $$

DELIMITER ;
