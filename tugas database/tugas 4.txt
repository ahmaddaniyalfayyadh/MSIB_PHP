# SOAL 3.1

# Tampilkan produk yang asset nya diatas 20jt
MariaDB [dbtoko1]> SELECT SUM(harga_beli * stok) as total from produk; 

# Tampilkan data produk beserta selisih stok dengan minimal stok
MariaDB [dbtoko1]> SELECT SUM(stok - min_stok) as selisih from produk;

# Tampilkan total asset produk secara keseluruhan
MariaDB [dbtoko1]> SELECT sum(stok) as total_asset from produk;

# Tampilkan data pelanggan yang lahirnya antara tahun 1980 sampai 1990
MariaDB [dbtoko1]> SELECT * FROM pelanggan WHERE YEAR(tgl_lahir) BETWEEN 1999 AND 2004;

# Tampilkan data pelanggan yang lahirnya tahun 1998
MariaDB [dbtoko1]> SELECT * FROM pelanggan WHERE YEAR(tgl_lahir)=1998;

# Tampilkan data pelanggan yang berulang tahun bulan agustus
MariaDB [dbtoko1]> SELECT * FROM pelanggan WHERE MONTH(tgl_lahir)=08;

# Tampilkan data pelanggan : nama, tmp_lahir, tgl_lahir dan umur (selisih tahun sekarang dikurang tahun kelahiran)
MariaDB [dbtoko1]> SELECT nama, tmp_lahir, tgl_lahir, (YEAR(NOW())-YEAR(tgl_lahir)) AS umur FROM pelanggan;


# SOAL 3.2

# Berapa jumlah pelanggan yang tahun lahirnya 1998
SELECT COUNT(tgl_lahir) FROM pelanggan WHERE YEAR(tgl_lahir) = 1998;

# Berapa jumlah pelanggan perempuan yang tempat lahirnya di Jakarta
SELECT COUNT(tempat_lahir) FROM pelanggan WHERE jenis_kelamin = 'perempuan' AND tempat_lahir = 'Jakarta';

# Berapa jumlah total stok semua produk yang harga jualnya dibawah 10rb
SELECT SUM(stok) FROM produk WHERE harga_jual < 10000;

# Ada berapa produk yang mempunyai kode awal K
SELECT COUNT(kode) FROM produk WHERE kode_produk LIKE 'K%';

# Berapa harga jual rata-rata produk yang diatas 1jt
SELECT AVG(harga_jual) FROM produk WHERE harga_jual > 1000000;

# Tampilkan jumlah stok yang paling besar
SELECT MAX(stok) FROM produk;

# Ada berapa produk yang stoknya kurang dari minimal stok
SELECT COUNT(min_stok) FROM produk WHERE stok < 10;

# Berapa total asset dari keseluruhan produk
SELECT SUM(harga_jual * stok) FROM produk;


# SOAL 3.3

# nomor 1
SELECT id, nama, stok,
       CASE
          WHEN stok <= minimal_stok THEN 'segera belanja'
          ELSE 'stok aman'
       END AS status_stok
FROM produk;

#nomor 2
SELECT id, nama, umur,
       CASE
          WHEN umur < 17 THEN 'muda'
          WHEN umur BETWEEN 17 AND 55 THEN 'Dewasa'
          ELSE 'Tua'
       END AS kategori_umur
FROM pelanggan;

nomor 3
SELECT id, kode, nama,
       CASE
          WHEN kode = 'TV01' THEN 'DVD Player'
          WHEN kode = 'K001' THEN 'Rice Cooker'
          ELSE 'Tidak Ada'
       END AS bonus
FROM produk;



# SOAL 3.4

# Tampilkan data statistik jumlah tempat lahir pelanggan
SELECT tempat_lahir, COUNT(*) as jumlah_pelanggan
FROM pelanggan
GROUP BY tempat_lahir;

# Tampilkan jumlah statistik produk berdasarkan jenis produk
SELECT jenis_produk, COUNT(*) as jumlah_produk
FROM produk
GROUP BY jenis_produk;

# Tampilkan data pelanggan yang usianya dibawah rata usia pelanggan
SELECT id, nama, umur
FROM pelanggan
WHERE umur < (SELECT AVG(umur) FROM pelanggan);

# Tampilkan data produk yang harganya diatas rata-rata harga produk
SELECT id, nama, harga
FROM produk
WHERE harga > (SELECT AVG(harga) FROM produk);

# Tampilkan data pelanggan yang memiliki kartu dimana iuran tahunan kartu diatas 90rb
SELECT id, nama
FROM pelanggan
WHERE kartu = 'Ya' AND iuran_tahunan > 90000;

# Tampilkan statistik data produk dimana harga produknya dibawah rata-rata harga produk secara keseluruhan
SELECT COUNT(*) as jumlah_produk, AVG(harga) as rata_rata_harga
FROM produk
WHERE harga < (SELECT AVG(harga) FROM produk);

# Tampilkan data pelanggan yang memiliki kartu dimana diskon kartu yang diberikan diatas 3%
SELECT id, nama
FROM pelanggan
WHERE kartu = 'Ya' AND diskon > 3;








